#include <bits/stdc++.h>
using namespace std;

struct V {
	double i;
	double j;
	V(double x2, double x1, double y2, double y1) {
		i = x2 - x1;
		j = y2 - y1;
	}
	double get_area_with(V &other) {
		return 0.5 * abs((other.j * i) - (other.i * j));
	}
};

double get_perimeter(double x1, double x2, double x3, double y1, double y2, double y3) {
	return hypot(x2 - x1, y2 - y1) + hypot(x3 - x1, y3 - y1) + hypot(x3 - x2, y3 - y2);
}

int main() {
	double x1, y1, x2, y2, x3, y3, x4, y4;
	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 >> x4 >> y4;
	while (x1 != 0.0 || x2 != 0.0 || x3 != 0.0 || x4 != 0.0
	    || y1 != 0.0 || y2 != 0.0 || y3 != 0.0 || y4 != 0.0) {
		// get center coordinate
		double m13 = (y3 - y1) / (x3 - x1);
		double m24 = (y4 - y2) / (x4 - x2);
		double x_center = (y2 - y1 + (m13 * x1) - (m24 * x2)) / (m13 - m24);
		double y_center = (m13 * (x_center - x1)) + y1;
		V v1c = V(x1, x_center, y1, y_center);
		V v3c = V(x3, x_center, y3, y_center);
		V v12 = V(x1, x2, y1, y2);
		V v32 = V(x3, x2, y3, y2);
		V v34 = V(x3, x4, y3, y4);
		V v14 = V(x1, x4, y1, y4);
		vector<pair<double, double>> answers = vector<pair<double, double>>();
		pair<double, double> q1 = make_pair(v1c.get_area_with(v12), get_perimeter(x1, x2, x_center, y1, y2, y_center));
		pair<double, double> q4 = make_pair(v1c.get_area_with(v14), get_perimeter(x1, x4, x_center, y1, y4, y_center));
		pair<double, double> q2 = make_pair(v3c.get_area_with(v32), get_perimeter(x3, x2, x_center, y3, y2, y_center));
		pair<double, double> q3 = make_pair(v3c.get_area_with(v34), get_perimeter(x3, x4, x_center, y3, y4, y_center));
		answers.push_back(q1);
		answers.push_back(q2);
		answers.push_back(q3);
		answers.push_back(q4);
		sort(answers.begin(), answers.end(), greater<pair<double, double>>());
		vector<double> real_answer = vector<double>();
		for (auto it = answers.begin(); it != answers.end(); it++) {
			real_answer.push_back(it->first);
			real_answer.push_back(it->second);
		}
		auto it = real_answer.begin();
		while (true) {
			cout << *it++;
			if (it != real_answer.end()) {
				cout << " ";
			}
			else {
				cout << endl;
				break;
			}
		}
		cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 >> x4 >> y4;
	}
}


